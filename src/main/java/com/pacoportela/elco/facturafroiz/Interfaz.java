package com.pacoportela.elco.facturafroiz;


import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;

/**
 *
 * @author Paco Portela Henche. Marzo 2022.
 * Esta clase crea una interfaz que le permitirá al usuario extraer el texto
 * de un documento PDF de una ó varias páginas, ordenarlo por orden alfabético
 * y crear un archivo con el texto ordenado. También permite separar en páginas
 * un documento PDF que contenga más de una. Finalmente permite también fusionar
 * dos ó más documentos de texto y luego ordenar alfabéticamente todo el texto
 * resultante y crear un archivo con él.
 */
public class Interfaz extends javax.swing.JFrame {
    /**
     * Constructor. Crea un nuevo objeto Interfaz.
     */
    public Interfaz() {
        initComponents();
        ponerIcono();
        //sacarAviso();
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        etiquetaMensajes = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFichero = new javax.swing.JMenu();
        menuItemSalir = new javax.swing.JMenuItem();
        menuBuscar = new javax.swing.JMenu();
        menuItemOrdenar = new javax.swing.JMenuItem();
        menuSeparar = new javax.swing.JMenuItem();
        menuItemJuntar = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        menuItemAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jProgressBar1.setStringPainted(true);

        etiquetaMensajes.setText("PULSE BUSCAR Y DESPUES ORDENAR PARA BUSCAR LA FACTURA A ORDENAR");

        menuFichero.setText("Fichero");

        menuItemSalir.setText("Salir");
        menuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalirActionPerformed(evt);
            }
        });
        menuFichero.add(menuItemSalir);

        jMenuBar1.add(menuFichero);

        menuBuscar.setText("Buscar");

        menuItemOrdenar.setText("Ordenar");
        menuItemOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemOrdenarActionPerformed(evt);
            }
        });
        menuBuscar.add(menuItemOrdenar);

        menuSeparar.setText("Paginar");
        menuSeparar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSepararActionPerformed(evt);
            }
        });
        menuBuscar.add(menuSeparar);

        menuItemJuntar.setText("Juntar");
        menuItemJuntar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemJuntarActionPerformed(evt);
            }
        });
        menuBuscar.add(menuItemJuntar);

        jMenuBar1.add(menuBuscar);

        menuAyuda.setText("Ayuda");

        menuItemAyuda.setText("Ayuda");
        menuItemAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAyudaActionPerformed(evt);
            }
        });
        menuAyuda.add(menuItemAyuda);

        jMenuBar1.add(menuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaMensajes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(etiquetaMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que se ejecuta cuando pulsamos el menuItem 'Ordenar'
     * @param evt el objeto ActionEvent que contiene los datos del evento.
     */
    private void menuItemOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemOrdenarActionPerformed
        File factura = buscarFactura();
        if(factura != null && factura.getName().contains("pdf")){
            this.etiquetaMensajes.setText("ESPERE POR FAVOR...");
            OrdenarWorker ordenar = new OrdenarWorker(this, factura);
            ordenar.addPropertyChangeListener(ordenar);
            ordenar.execute();
        }
        
    }//GEN-LAST:event_menuItemOrdenarActionPerformed

    /**
     * Método que se ejecuta cuando pulsamos el menuItem 'Salir'. Cierra el
     * programa.
     * @param evt el objeto ActionEvent que contiene los datos del evento.
     */
    private void menuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuItemSalirActionPerformed

    /**
     * Método que se ejecuta cuando pulsamos el menuItem 'Paginar'.
     * @param evt el objeto ActionEvent que contiene los datos del evento.
     */
    private void menuSepararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSepararActionPerformed
        File factura = buscarFactura();
        paginarFactura(factura);
    }//GEN-LAST:event_menuSepararActionPerformed

    /**
     * Método que se ejecuta cuando pulsamos el menuItem 'Ayuda'. Muestra una
     * pantalla de ayuda al usuario con el funcionamiento del programa.
     * @param evt el objeto ActionEvent que contiene los datos del evento.
     */
    private void menuItemAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAyudaActionPerformed
        String textoAyuda = "<html><head></head><body>"
                + "<div align=center><h1><b><u>"
                + "Objetivo del programa</u></b></h1></div>"
                + "<font size=4>El programa proporciona tres "
                + "funcionalidades.<br>La primera utiliza el "
                + "reconocimiento óptico de caracteres para "
                + "extraer el texto de un documento PDF.<br>"
                + "Una vez extraido el texto de todas las páginas del "
                + "documento ordena el texto<br> por orden alfabético y "
                + "crea un fichero con dicho texto ordenado.<br><br>"
                + "La segunda permite separar las páginas de un documento "
                + "PDF que contenga varias.<br><br>"
                + "La tercera fusiona dos ó más documentos de texto y "
                + "ordena todas las lineas por orden alfabético creando "
                + "después un archivo con dicho texto."
                + "<div align=center><h1><b><u>"
                + "Como usar el programa</u></b></h1></div>"
                + "<div align=center><h2><b><u>"
                + "Ordenar un documento</u></b></h2></div>"
                + "<font size=4><ol><li>Pulse en la barra de menús el botón "
                + "BUSCAR y a continuación ORDENAR.</li>"
                + "<li>Por defecto se busca el documento PDF en la carpeta de "
                + "Descargas.</li>"
                + "<li>Seleccione el documento que desee ordenar.</li>"
                + "<li>El programa comenzara a ordenar el documento mostrando "
                + "el progreso.</li>"
                + "<li>Una vez termine de ordenar todo el documento "
                + "creará un fichero de texto con el nombre ordenada_ "
                + "+ la fecha de creación.<br>En este fichero estará todo el "
                + "texto del documento PDF ordenado por orden alfabético."
                + "</li></ol>"
                + "<div align=center><h2><b><u>"
                + "Paginar un documento</u></b></h2></div>"
                + "<font size=4><ol><li>Pulse en la barra de menús el botón "
                + "BUSCAR y a continuación PAGINAR.</li>"
                + "<li>Seleccione el documento que desee paginar.</li>"
                + "<li>El programa separará las páginas del documento "
                + "original y creará un documento PDF individual con cada una "
                + "de ellas.</li></ol>"
                + "<div align=center><h2><b><u>"
                + "Juntar archivos</u></b></h2></div>"
                + "<font size=4><ol><li>Pulse en la barra de menús el botón "
                + "BUSCAR y a continuación JUNTAR.</li>"
                + "<li>Seleccione los archivos que quiere juntar manteniendo "
                + "pulsada la tecla CONTROL.</li>"
                + "<li>El programa juntará todos los archivos seleccionados y "
                + "creará un fichero de texto con el nombre 'FacturaUnida'.</li>"
                + "</body></html>";
        JOptionPane.showMessageDialog(this, textoAyuda, "",
                JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_menuItemAyudaActionPerformed

    /**
     * Método que se ejecuta cuando pulsamos el menuItem 'Juntar'.
     * @param evt el objeto ActionEvent que contiene los datos del evento.
     */
    private void menuItemJuntarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemJuntarActionPerformed
        JuntarFacturas jf = new JuntarFacturas(this);
    }//GEN-LAST:event_menuItemJuntarActionPerformed

    /**
     * Metodo que despliega un JFileChooser para que se pueda buscar un
     * archivo PDF.
     * @return un objeto File que representa el archivo seleccionado.
     */
   private File buscarFactura(){
       File factura = null;
       JFileChooser buscador = new JFileChooser("C:/Users/PACO/Downloads");
       if (buscador.showOpenDialog(this.getContentPane())
                == JFileChooser.APPROVE_OPTION) {
            factura = buscador.getSelectedFile();
        }
       if(factura == null || !factura.getName().contains("pdf")){
                JOptionPane.showMessageDialog(this, "Debe ser un archivo pdf",
                        "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
        return factura;
   }
   
   /**
    * Método que cambia el icono de la interfaz.
    */
   private void ponerIcono(){
    URL url = Interfaz.class.getResource("/froiz.jpeg");
        if(url != null){
            ImageIcon icono = new ImageIcon(url);
            this.setIconImage(icono.getImage());
        }
    }
   
   /**
    * Método que crea una etiqueta de aviso.
    * @return un objeto JLabel con el aviso.
    */
   private JLabel crearEtiquetaAviso(){
       URL url = Interfaz.class.getResource("/cabeza.png");
       ImageIcon imagen = null;
       if(url != null){
           imagen = new ImageIcon(url);
       }
       
       JLabel eti = new JLabel("Â¡Â¡Â¡QUE BURRITA ERES!!!", imagen, JLabel.CENTER);
       eti.setVerticalTextPosition(JLabel.BOTTOM);
       eti.setHorizontalTextPosition(JLabel.CENTER);
       return eti;
   }
   
   /**
    * Método que muestra un aviso.
    */
   private void sacarAviso(){
       int opcion = JOptionPane.showConfirmDialog(this,
               "Â¿Te acuerdas como era Bianca?",
               "Recordatorio", JOptionPane.YES_NO_OPTION,
               JOptionPane.INFORMATION_MESSAGE);
       if(opcion == JOptionPane.YES_OPTION){
           JOptionPane.showMessageDialog(this,
                   "Â¡MUY BIEN BIANCA, ASI ME GUSTA!");
       }
       else{
           JOptionPane.showMessageDialog(this,
                   this.crearEtiquetaAviso());
       }
   }
   
   /**
    * Método que crea un objeto 'PaginarFactura' para separar en páginas sueltas
    * el fichero que se le pasa como parámetro.
    * @param f el objeto File que contiene los datos del fichero a paginar.
    */
   private void paginarFactura(File f){
       if(f != null && f.getName().contains("pdf")){
           PaginarFactura paginar = new PaginarFactura();
           try {
               paginar.paginarDocumento(f);
            } catch (IOException ex) {
               Logger.getLogger(Interfaz.class.getName())
                       .log(Level.SEVERE, null, ex);
           }
       }
       
   }
   
    /**
     * Método que devuelve una referencia a este objeto 'Interfaz'.
     * @return El objeto 'Interfaz' en uso.
     */
    public Interfaz getInterfaz(){
       return this;
   }
   
    /**
     * Método que devuelve una referencia al objeto 'JLabel' etiquetaMensajes.
     * @return El objeto 'etiquetaMensajes' de la Interfaz.
     */
    public JLabel getEtiquetaMensajes(){
       return this.etiquetaMensajes;
   }
   
    /**
     * Método que devuelve una referencia al objeto JProgressBar de la interfaz.
     * @return el objeto 'jProgressBar1' de la interfaz.
     */
    public JProgressBar getProgressBar(){
       return this.jProgressBar1;
   }
   
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel etiquetaMensajes;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuBuscar;
    private javax.swing.JMenu menuFichero;
    private javax.swing.JMenuItem menuItemAyuda;
    private javax.swing.JMenuItem menuItemJuntar;
    private javax.swing.JMenuItem menuItemOrdenar;
    private javax.swing.JMenuItem menuItemSalir;
    private javax.swing.JMenuItem menuSeparar;
    // End of variables declaration//GEN-END:variables
}
